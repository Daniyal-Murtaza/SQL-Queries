-- q1
CREATE VIEW [SUMMARY OF ALL_THE PRODUCTS] AS
    SELECT
        PRODUCTNAME,
        COMPANYNAME,
        CATEGORYNAME,
        PRODUCTS.UNITPRICE,
        COUNT(*) AS [NO OF ORDERS],
        SUM(QUANTITY) AS [TOTAL QTY SOLD]
    FROM
        [ORDER DETAILS]
        JOIN PRODUCTS
        ON PRODUCTS.PRODUCTID = [ORDER DETAILS].PRODUCTID JOIN SUPPLIERS
        ON SUPPLIERS.SUPPLIERID = PRODUCTS.SUPPLIERID
        JOIN CATEGORIES
        ON CATEGORIES.CATEGORYID = PRODUCTS.PRODUCTID
    GROUP BY
        PRODUCTNAME, COMPANYNAME, CATEGORYNAME, PRODUCTS.UNITPRICE
        SELECT
            *
        FROM
            [SUMMARY OF ALL_THE PRODUCTS]

-- q2
CREATE VIEW [SUMMARY OF ALL THE CUSTOMERS] AS
    SELECT
        E.FIRSTNAME + ' ' + E.LASTNAME AS EMPLOYEENAME,
        M.FIRSTNAME + ' ' + M.LASTNAME AS MANAGERNAME,
        YEAR(GETDATE())- YEAR(E.BIRTHDATE) AS [AGE],
        YEAR(GETDATE())-YEAR(E.HIREDATE) AS [COMPANY YEARS],
        COUNT(*) AS [NO OF ORDERS]
    FROM
        EMPLOYEES E
        LEFT OUTER JOIN EMPLOYEES M
        ON E.REPORTSTO = M.EMPLOYEEID
        INNER JOIN ORDERS
        ON ORDERS.EMPLOYEEID = E.EMPLOYEEID
    GROUP BY
        E.FIRSTNAME,
        E.LASTNAME,
        M.FIRSTNAME,
        M.LASTNAME,
        E.BIRTHDATE,
        E.HIREDATE
        SELECT
            *
        FROM
            [SUMMARY OF ALL THE CUSTOMERS]

 --q3
	GO CREATE PROCEDURE OFFERDISCOUNT @PRODUCTID INT,
	@DISCOUNT FLOAT AS BEGIN UPDATE PRODUCTS SET UNITPRICE = UNITPRICE * (1 - @DISCOUNT/100)
WHERE
	PRODUCTID = @PRODUCTID END BEGIN UPDATE [ORDER DETAILS] SET UNITPRICE = UNITPRICE * (1 - @DISCOUNT/100)
WHERE
	PRODUCTID = @PRODUCTID
	AND ORDERID IN (
		SELECT
			ORDERID
		FROM
			ORDERS
		WHERE
			SHIPPEDDATE IS NULL
	) END EXEC OFFERDISCOUNT 2,
	25
	SELECT
		*
	FROM
		PRODUCTS

		SELECT
			*
		FROM
			[ORDER DETAILS]
		WHERE
			PRODUCTID = 2

--q4
	GO CREATE PROCEDURE DELETEEMPLOYEE @E1 INT AS BEGIN IF (
		SELECT
			REPORTSTO
		FROM
			EMPLOYEES
		WHERE
			EMPLOYEEID = @E1
	) IS NOT NULL
	AND (
		SELECT
			COUNT(O.ORDERID)
		FROM
			ORDERS O
			INNER JOIN EMPLOYEES E
			ON E.EMPLOYEEID = O.EMPLOYEEID
		WHERE
			E.EMPLOYEEID = @E1
	) = 0 BEGIN DELETE TERRITORIES
WHERE
	TERRITORYID IN (
		SELECT
			T.TERRITORYID
		FROM
			TERRITORIES T
			INNER JOIN EMPLOYEETERRITORIES ET
			ON T.TERRITORYID = ET.TERRITORYID
			INNER JOIN EMPLOYEES E
			ON ET.EMPLOYEEID = E.EMPLOYEEID
		WHERE
			E.EMPLOYEEID = @E1
	) UPDATE EMPLOYEES SET REPORTSTO = (
		SELECT
			REPORTSTO
		FROM
			EMPLOYEES
		WHERE
			EMPLOYEEID = @E1
	)
WHERE
	REPORTSTO = @E1 DELETE EMPLOYEES
WHERE
	EMPLOYEEID = @E1 END END EXEC DELETEEMPLOYEE 5
	SELECT
		*
	FROM
		EMPLOYEES

--q5
	GO CREATE PROCEDURE COPYORDER @ORDERID INT,
	@CUSTOMER_ID VARCHAR(5) AS BEGIN SET IDENTITY_INSERT ORDERS OFF;

INSERT INTO ORDERS(
	CUSTOMERID,
	EMPLOYEEID,
	ORDERDATE,
	REQUIREDDATE,
	SHIPPEDDATE,
	SHIPVIA,
	FREIGHT,
	SHIPNAME,
	SHIPADDRESS,
	SHIPCITY,
	SHIPREGION,
	SHIPPOSTALCODE,
	SHIPCOUNTRY
)
	SELECT
		@CUSTOMER_ID,
		EMPLOYEEID,
		GETDATE(),
		REQUIREDDATE,
		NULL,
		SHIPVIA,
		FREIGHT,
		SHIPNAME,
		SHIPADDRESS,
		SHIPCITY,
		SHIPREGION,
		SHIPPOSTALCODE,
		SHIPCOUNTRY
	FROM
		ORDERS
	WHERE
		ORDERID=@ORDERID END BEGIN DECLARE @ID INT SET @ID = (
			SELECT
				TOP 1 ORDERID
			FROM
				ORDERS
			ORDER BY
				ORDERID DESC
		) INSERT INTO [ORDER DETAILS](ORDERID,
		PRODUCTID,
		UNITPRICE,
		QUANTITY,
		DISCOUNT)
		
